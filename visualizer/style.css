html {
  /* Define colors */
  --main-bg-color: rgb(27, 30, 39);
  --overlay-bg-color: rgba(55, 61, 79, 0.99);

  --banner-text-color: rgb(255, 255, 255);
  --banner-bg-color: rgb(41, 45, 57);

  --nearform-red: rgb(237,24,40);
  --nearform-grey: rgb(121,122,124);

  --grey-highlight: rgb(191,192,194);

  --pure-white: rgb(255, 255, 255);
  --pure-black: rgb(0, 0, 0);

  --cyan-highlight: rgb(96, 147, 208);
  --cyan: rgb(63, 125, 198);

  --party-colour-1: rgb(166, 228, 255);
  --party-colour-2: var(--cyan);
  --party-colour-3: var(--nearform-grey);

  --type-colour-1: rgb(173, 102, 71); /* Rusty orange */
  --type-colour-2: rgb(0, 209, 168); /* Pale green */
  --type-colour-3: rgb(211, 166, 255); /* Pale lilac */
  --type-colour-4: rgb(102, 69, 181); /* Deep purple */
  --type-colour-5: rgb(252, 255, 123); /* Pale yellow */

  /* Define simple SVG icons */
  --down-white-chevron-arrow: url('data:image/svg+xml;utf8,<svg fill="rgb(255,255,255)" width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z"/></svg>');

  --close-x: "Ã—";

  --main-text-size: 10pt;
}

/* Main layout */

html, body {
  border: 0;
  margin: 0;
  padding: 0;
}

body {
  background: var(--main-bg-color);
}

/* Global Typography */

html {
  font-family: sans-serif;
}

html * {
  box-sizing: border-box;
}

html #banner, html #header, html #node-link, html #side-bar, html #footer {
  /* Light text on dark background in the browser looks blocky. To make it smoother
     and clearer, we use antialiased font rendering in dark theme. More details,
     especially on why this is a bad idea for dark text on light backgrounds:
       http://usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/
  */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html.light-theme #header, html.light-theme #node-link, html.light-theme #side-bar {
  -webkit-font-smoothing: unset;
  -moz-osx-font-smoothing: unset;
}

.hidden {
  display: none;
}

.collapsed .collapsible-content-wrapper {
  display: none;
}

/* Banner layout */

#banner {
  height: 65px;
  background: var(--banner-bg-color);
  position: relative;
}

#banner svg:last-child {
  position: absolute;
  height: 40px;
  right: 28px;
  top: 13px;
}

#banner::after {
  content: 'BubbleProf';
  font-size: 14pt;
  font-weight: lighter;
  color: var(--banner-text-color);

  display: block;
  margin-left: 35px;
  line-height: 65px;
}

main {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

/* Header */

#header {
  width: 100%;
  margin: 4px 24px 4px;
  padding: 4px 0;
  border-bottom: 1px solid var(--cyan);
  display: flex;
  flex-direction: row;
  font-size: var(--main-text-size);
  position: sticky;
  top: 0;
  z-index: 10;
  background: var(--main-bg-color);
}

#header .panel {
  margin: 0 18px 0 6px;
}

#header .panel > label {
  color: var(--cyan);
}

#header .interactive-key {
  display: inline-block;
  margin: 0 3px;
  padding: 2px;
  border-bottom: 1px solid transparent;
}

#header .interactive-key label {
  color: var(--pure-white);
}

.type-icon,
.party-icon {
  display: inline-block;
  width: 9px;
}

.type-icon {
  margin: 4px;
  height: 1px;
  border-top: 1px solid transparent;
}

.party-icon {
  height: 8px;
  margin: 1px 4px;
  border-top: 2px solid transparent;
  border-bottom: 2px solid transparent;
  background: var(--pure-black);
}

body[data-highlight-party='user'] #header .interactive-key.party-user,
body[data-highlight-party='external'] #header .interactive-key.party-external,
body[data-highlight-party='nodecore'] #header .interactive-key.party-nodecore,
body[data-highlight-type='files-streams'] #header .interactive-key.type-files-streams,
body[data-highlight-type='networks'] #header .interactive-key.type-networks,
body[data-highlight-type='crypto'] #header .interactive-key.type-crypto,
body[data-highlight-type='timing-promises'] #header .interactive-key.type-timing-promises,
body[data-highlight-type='other'] #header .interactive-key.type-other {
  border-bottom-color: var(--cyan);
}

body[data-highlight-type='files-streams'] #header .interactive-key.type-files-streams .type-icon,
body[data-highlight-type='networks'] #header .interactive-key.type-networks .type-icon,
body[data-highlight-type='crypto'] #header .interactive-key.type-crypto .type-icon,
body[data-highlight-type='timing-promises'] #header .interactive-key.type-timing-promises .type-icon,
body[data-highlight-type='other'] #header .interactive-key.type-other .type-icon {
  border-top-width: 2.5px;
}

/* Footer */

#footer {
  position: fixed;
  width: 100%;
  bottom: 0;
  z-index: 2;
  display: flex;
  flex-direction: column-reverse;
}

#footer .bar {
  border-top: 1px solid var(--cyan-highlight);
  background: var(--cyan);
  overflow: hidden;
  cursor: pointer;
  height: 65px;
  width: 100%;
  cursor: pointer;
}

#footer .bar .text {
  font-size: 14pt;
  font-variant: all-small-caps;
  font-weight: bold;
  color: var(--pure-white);

  margin-left: 37px;
  line-height: 64px;
  float: left;
}

#footer .bar .arrow {
  float: left;
  margin: 16px 10px;
  height: 34px;
  width: 34px;
  background-image: var(--down-white-chevron-arrow);
  background-size: cover;
  transform: scaleY(-1);
}

#footer.collapsed .bar .arrow {
  transform: scaleY(1);
}

#frames-panel {
  background: var(--overlay-bg-color);
  padding: 18px 28px;
  color: var(--pure-white);
  font-size: var(--main-text-size);
  max-height: 300px;
  overflow: auto;
}

#frames-panel .sub-collapse-control {
  cursor: pointer;
  color: var(--cyan);
  font-weight: bold;
}

#frames-panel .collapsed .frame-item {
  display: none;
}

#frames-panel .frame-item {
  margin: 0 0 0 4px;
  padding: 4px 0;
}

#frames-panel pre.frame-item {
  white-space: pre-wrap;
  padding-left: 3px;
}

#frames-panel div.frame-item {
  padding: 8px 20px;
}

#frames-panel .frame-group .frame-item {
  border-left: solid 1px var(--cyan);
}

#frames-panel .collapsed .sub-collapse-control .arrow {
  transform: rotate(90deg);
}

#frames-panel .sub-collapse-control .arrow {
  display: inline-block;
  margin: 0 8px -3px -3px;
}

#frames-panel .close {
  width: 24px;
  height: 24px;
  color: var(--cyan-highlight);
  position: absolute;
  right: 28px;
  top: 18px;
  display: block;
  font-size: 30px;
  cursor: pointer;
}

#frames-panel .close:after {
  content: var(--close-x);
  display: block;
}

/* Node-link diagram and container */

#node-link {
  position: relative;
  padding-bottom: 65px;
  width: 75%;
}

svg.bubbleprof text.text-label {
  text-anchor: middle;
}

svg.bubbleprof .bubble-wrapper .time-label {
  alignment-baseline: middle;
}

svg.bubbleprof .bubble-wrapper .name-label {
  alignment-baseline: after-edge;
}

svg.bubbleprof .bubble-wrapper .name-label.flipped-label {
  alignment-baseline: before-edge;
}

svg.bubbleprof .name-label {
  font-size: 12pt;
}

svg.bubbleprof .below-threshold-1 .name-label {
  font-size: 11pt;
  opacity: 0.9;
}

svg.bubbleprof .below-threshold-2 .name-label {
  font-size: 10pt;
  opacity: 0.8;
}

svg.bubbleprof .below-threshold-3 .name-label {
  font-size: 9pt;
  opacity: 0.7;
}

svg.bubbleprof .time-label {
  font-size: 9pt;
}

svg.bubbleprof .below-threshold-1.bubble-wrapper .time-label {
  display: none;
}

svg.bubbleprof .bubble-wrapper,
svg.bubbleprof .link-wrapper {
  cursor: pointer;
}

svg.bubbleprof .bubble-wrapper .bubble-outer {
  fill: var(--pure-black);
  cursor: pointer;
}

svg.bubbleprof .bubble-wrapper .bubble-inner {
  fill: var(--main-bg-color);
  stroke: none;
}

svg.bubbleprof .bubble-wrapper.below-threshold-2 .bubble-inner {
  opacity: 0;
}

svg.bubbleprof .link-outer {
  fill: var(--pure-black);
  cursor: pointer;
}

#sublayout-svg {
  position: absolute;
  background: var(--main-bg-color);
  top: 0;
}

#sublayout:after {
  display: block;
  top: 8px;
  right: 8px;
  height: 32px;
  background: var(--pure-black);
  color: var(--cyan);
  content: var(--close-x);
  z-index: 20;
  position: absolute;
  padding: 2px 11px 6px;
  font-size: 28px;
  cursor: pointer;
}

/* Sidebar */

#side-bar {
  width: 25%;
  margin: 16px 0 89px 0;
  padding: 0 24px 0 16px;
  border-left: 1px solid var(--cyan);
  font-size: var(--main-text-size);
  color: var(--nearform-grey);
}

#side-bar .side-bar-item .collapse-control {
  cursor: pointer;
  color: var(--pure-white);
  border-bottom: 1px solid var(--cyan);
  position: relative;
  padding: 8px 16px 8px 8px;
}

#side-bar .side-bar-item .collapse-control .arrow,
#frames-panel .sub-collapse-control .arrow {
  height: 14px;
  width: 16px;
  background-image: var(--down-white-chevron-arrow);
  background-size: cover;
  transform: scaleY(-1);
}

#side-bar .side-bar-item .collapse-control .arrow {
  position: absolute;
  top: 8px;
  right: 0px;
}

#side-bar .side-bar-item.collapsed .collapse-control .arrow {
  transform: scaleY(1);
}

#side-bar .side-bar-item .collapsible-content-wrapper {
  margin-left: 8px;
}

#side-bar .collapsible-content-wrapper .key-image {
  display: block;
  height: 48px;
  width: 48px;
  margin-left: 12px;
  margin-bottom: 6px;
  float: right;
  background-size: cover;
}

#side-bar .key-item-image {
  width: 48px;
  height: 48px;
  float: right;
  margin-left: 6px;
  margin-bottom: 6px;
}

#side-bar .main-key p {
  clear: right;
}

body.spiderweb-layout svg.bubbleprof .link-inner {
  /* TODO: visible only in spiderweb layout */
  stroke: var(--pure-black);
  opacity: 0.5;
}

body[data-highlight-type='files-streams'] svg .type-files-streams,
body[data-highlight-type='networks'] svg .type-networks,
body[data-highlight-type='crypto'] svg .type-crypto,
body[data-highlight-type='timing-promises'] svg .type-timing-promises,
body[data-highlight-type='other'] svg .type-other {
  stroke-width: 2.5px;
}

body[data-highlight-party='user'] svg .party-user .by-variable,
body[data-highlight-party='external'] svg .party-external .by-variable ,
body[data-highlight-type='nodecore'] svg .party-nodecore .by-variable {
  stroke-width: 3px !important;
}

/* Hover box */

.hover-box {
  position: absolute;
  opacity: 0.86;
  width: 320px;
  background-color: var(--pure-black);
  color: var(--nearform-grey);
  padding-bottom: 14px;
  margin-left: 6px;
}

.hover-box:before {
  content: "";
  display: block;
  position: absolute;
  margin-left: -8px;
  border: 6px solid transparent;
  border-right-color: var(--pure-black);
  border-top-color: var(--pure-black);
}

.hover-box p {
  margin: 0;
  padding: 6px 14px;
  font-size: var(--main-text-size)
}

.hover-box strong {
  font-weight: normal;
  color: var(--grey-highlight);
}

.hover-box h2 {
  margin: 0;
  padding: 14px;
  font-size: 13pt;
  color: var(--pure-white);
  font-weight: normal;
  padding-bottom: 6px;
  border-bottom: 2px solid var(--main-bg-color);
}

.hover-box h2 .subtitle {
  font-size: 12pt;
  color: var(--nearform-grey);
  display: inline-block;
  margin: 0 4px 0 0;
}

/* Global classes linking styles to data properties */

.party-user .party-icon,
.party-user .by-variable {
  border-color: var(--party-colour-1);
  stroke: var(--party-colour-1);
}
.party-external .party-icon,
.party-external .by-variable {
  border-color: var(--party-colour-2);
  stroke: var(--party-colour-2);
}

.party-root .party-icon,
.party-root .by-variable,
.party-nodecore .party-icon,
.party-nodecore .by-variable {
  border-color: var(--party-colour-3);
  stroke: var(--party-colour-3);
}

.party-user .text-label {
  fill: var(--party-colour-1);
}
.party-external .text-label {
  fill: var(--party-colour-2);
}
.party-root .text-label,
.party-nodecore .text-label {
  fill: var(--party-colour-3);
}

.type-files-streams,
.type-files-streams .by-variable {
  stroke: var(--type-colour-1);
}
.type-files-streams .type-icon {
  border-color: var(--type-colour-1);
}
.type-networks,
.type-networks .by-variable {
  stroke: var(--type-colour-2);
}
.type-networks .type-icon {
  border-color: var(--type-colour-2);
}
.type-crypto,
.type-crypto .by-variable {
  stroke: var(--type-colour-3);
}
.type-crypto .type-icon {
  border-color: var(--type-colour-3);
}
.type-timing-promises,
.type-timing-promises .by-variable {
  stroke: var(--type-colour-4);
}
.type-timing-promises .type-icon {
  border-color: var(--type-colour-4);
}
.type-other,
.type-other .by-variable {
  stroke: var(--type-colour-5);
}
.type-other .type-icon {
  border-color: var(--type-colour-5);
}


/* Loading indicator based on https://projects.lukehaas.me/css-loaders/#load8
   * Must * animate by transforms only, to keep animating when processor is busy */

.loading-indicator,
.loading-indicator:before,
.loading-indicator:after,
body:not(.initialized):before,
body:not(.initialized):after {
  width: 124px;
  height: 120px;
  position: absolute;
  left: 50%;
  margin: 80px 0 0 -60px;
  z-index: 3;
}

body:not(.initialized) {
  position: relative;
  z-index: 3;
}

body:not(.initialized):before,
.loading-indicator:before {
  content: "";
  border-radius: 50%;
  display: block;
  border-left: 1px solid var(--nearform-grey);
  border-right: 1px solid var(--nearform-grey);
  border-top: 4px solid var(--nearform-red);
  border-bottom: 4px solid var(--nearform-red);
  transform: translateZ(0);
  animation: loading 1.6s infinite linear;
}

body:not(.initialized):after,
.loading-indicator:after {
  font-size: 14pt;
  font-variant: all-small-caps;
  font-weight: bold;
  color: var(--nearform-red);
  text-align: center;

  display: block;
  position: absolute;
}

.loading-indicator:after {
  content: "Loading";
  top: 50px;
}

body:not(.initialized):before {
  top: 65px;
}
body:not(.initialized):after {
  content: "Preparing file";
  top: 115px;
}

@keyframes loading {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
